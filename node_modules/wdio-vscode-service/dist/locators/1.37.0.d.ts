export declare const locatorVersion = "1.37.0";
export declare const ActivityBar: {
    elem: string;
    viewContainer: string;
    label: string;
    actionsContainer: string;
    actionItem: string;
    actionItemSelected: string;
};
export declare const ViewControl: {
    attribute: string;
    klass: string;
    scmId: string;
    debugId: string;
    badge: string;
};
export declare const BottomBarPanel: {
    elem: string;
    problemsTab: string;
    outputTab: string;
    debugTab: string;
    terminalTab: string;
    maximize: string;
    restore: string;
    tabContainer: string;
    tab: (title: string) => string;
    actions: string;
    globalActions: string;
    action: (label: string) => string;
};
export declare const BottomBarViews: {
    actionsContainer: (label: string) => string;
    channelOption: string;
    channelCombo: string;
    channelText: string;
    channelRow: string;
    textArea: string;
    clearText: string;
    outputChannels: string;
};
export declare const ProblemsView: {
    elem: string;
    markersFilter: string;
    input: string;
    collapseAll: string;
    markerRow: string;
    changeCount: string;
};
export declare const Marker: {
    detailsText: string;
    detailsSource: string;
    detailsLine: string;
    fileName: string;
    problemCount: string;
    rowLabel: string;
    markerTwistie: string;
};
export declare const TerminalView: {
    elem: string;
    actionsLabel: string;
    textArea: string;
    killTerminal: string;
    newTerminal: string;
    tabList: string;
    singleTab: string;
    selectedRow: string;
    row: string;
    newCommand: string;
};
export declare const DebugConsoleView: {
    elem: string;
};
export declare const OutputView: {
    elem: string;
    lines: string;
    actionsLabel: string;
};
export declare const EditorView: {
    elem: string;
    editorGroup: string;
    settingsEditor: string;
    webView: string;
    diffEditor: string;
    tab: string;
    closeTab: string;
    tabTitle: string;
    tabSeparator: string;
    tabLabel: string;
    actionContainer: string;
    actionItem: string;
};
export declare const Editor: {
    elem: string;
    inputArea: string;
    title: string;
};
export declare const TextEditor: {
    activeTab: string;
    editorContainer: string;
    dataUri: string;
    formatDoc: string;
    marginArea: string;
    lineNumber: (line: number) => string;
    lineOverlay: (line: number) => string;
    breakPoint: string;
    debugHint: string;
    selection: string;
    findWidget: string;
};
export declare const FindWidget: {
    toggleReplace: string;
    replacePart: string;
    findPart: string;
    matchCount: string;
    input: string;
    content: string;
    button: (title: string) => string;
    checkbox: (title: string) => string;
};
export declare const ContentAssist: {
    elem: string;
    message: string;
    itemRows: string;
    itemRow: string;
    itemLabel: string;
    itemText: string;
    itemList: string;
    firstItem: string;
};
export declare const SettingsEditor: {
    title: string;
    itemRow: string;
    header: string;
    tabs: string;
    actions: string;
    action: (label: string) => string;
    settingConstructor: (title: string, category: string) => string;
    settingDesctiption: string;
    comboSetting: string;
    comboOption: string;
    textSetting: string;
    checkboxSetting: string;
    checkboxChecked: string;
    linkButton: string;
    itemCount: string;
};
export declare const DiffEditor: {
    originalEditor: string;
    modifiedEditor: string;
};
export declare const WebView: {
    outerFrame: string;
    activeFrame: string;
};
export declare const ContextMenu: {
    contextView: string;
    elem: string;
    itemConstructor: (label: string) => string;
    itemElement: string;
    itemLabel: string;
    itemText: string;
    itemNesting: string;
    viewBlock: string;
};
export declare const TitleBar: {
    elem: string;
    topLevelItemConstructor: (label: string) => string;
    overflowItemConstructor: (label: string) => string;
    itemElement: string;
    itemLabel: string;
    itemNesting: string;
    title: string;
    menubar: string;
};
export declare const WindowControls: {
    elem: string;
    minimize: string;
    maximize: string;
    restore: string;
    close: string;
};
export declare const SideBarView: {
    elem: string;
};
export declare const ViewTitlePart: {
    elem: string;
    title: string;
    action: string;
    actionLabel: string;
    actionContstructor: (title: string) => string;
};
export declare const ViewContent: {
    elem: string;
    progress: string;
    section: string;
    sectionTitle: string;
    sectionText: string;
    defaultView: string;
    extensionsView: string;
};
export declare const ViewSection: {
    title: string;
    titleText: string;
    header: string;
    headerExpanded: string;
    actions: string;
    actionConstructor: (label: string) => string;
    button: string;
    buttonLabel: string;
    level: string;
    index: string;
    welcomeContent: string;
};
export declare const TreeItem: {
    actions: string;
    actionLabel: string;
    actionTitle: string;
    twistie: string;
};
export declare const DefaultTreeSection: {
    itemRow: string;
    itemLabel: string;
    rowContainer: string;
    rowWithLabel: (label: string) => string;
    lastRow: string;
};
export declare const DefaultTreeItem: {
    ctor: (label: string) => string;
    twistie: string;
    tooltip: string;
};
export declare const CustomTreeSection: {
    itemRow: string;
    itemLabel: string;
    rowContainer: string;
    rowWithLabel: (label: string) => string;
};
export declare const CustomTreeItem: {
    elem: (label: string) => string;
    tooltipAttribute: string;
    expandedAttr: string;
    expandedValue: string;
    description: string;
};
export declare const ExtensionsViewSection: {
    items: string;
    itemRow: string;
    searchBox: string;
    textContainer: string;
    textField: string;
};
export declare const ExtensionsViewItem: {
    itemTitle: string;
    version: string;
    author: string;
    description: string;
    install: string;
    manage: string;
};
export declare const ScmView: {
    providerHeader: string;
    providerRelative: string;
    initButton: string;
    providerTitle: string;
    providerType: string;
    actionConstructor: (title: string) => string;
    action: string;
    inputField: string;
    changeItem: string;
    changeName: string;
    changeCount: string;
    changeLabel: string;
    changeDesc: string;
    resource: string;
    changes: string;
    stagedChanges: string;
    expand: string;
    more: string;
    multiMore: string;
    multiScmProvider: string;
    singleScmProvider: string;
    multiProviderItem: string;
    itemLevel: (level: number) => string;
    itemIndex: (index: number) => string;
};
export declare const DebugView: {
    launchCombo: string;
    launchSelect: string;
    launchOption: string;
    optionByName: (name: string) => string;
    startButton: string;
};
export declare const StatusBar: {
    elem: string;
    language: string;
    lines: string;
    encoding: string;
    indent: string;
    selection: string;
    notifications: string;
    bell: string;
    problems: string;
    item: string;
    itemTitle: string;
};
export declare const Workbench: {
    elem: string;
    notificationContainer: string;
    notificationItem: string;
};
export declare const Notification: {
    message: string;
    icon: string;
    source: string;
    progress: string;
    dismiss: string;
    expand: string;
    btnSection: string;
    actions: string;
    action: string;
    actionLabel: string;
    standalone: (id: string) => string;
    standaloneContainer: string;
    center: (index: number) => string;
    buttonConstructor: (title: string) => string;
};
export declare const NotificationsCenter: {
    elem: string;
    closeBtn: string;
    clear: string;
    row: string;
};
export declare const DebugToolbar: {
    elem: string;
    button: (title: string) => string;
};
export declare const Input: {
    inputBox: string;
    input: string;
    quickPickIndex: (index: number) => string;
    quickPickPosition: (index: number) => string;
    quickPickLabel: string;
    quickPickDescription: string;
    quickPickSelectAll: string;
    titleBar: string;
    title: string;
    backButton: string;
};
export declare const InputBox: {
    elem: string;
    message: string;
    progress: string;
    quickList: string;
    rows: string;
    row: string;
};
export declare const QuickOpenBox: {
    elem: string;
    progress: string;
    quickList: string;
    row: string;
};
export declare const Dialog: {
    elem: string;
    message: string;
    details: string;
    buttonContainer: string;
    button: string;
    closeButton: string;
};
export declare const welcomeContentButtonSelector = ".//a[@class='monaco-button monaco-text-button']";
export declare const welcomeContentTextSelector = ".//p";
export declare const WelcomeContent: {
    button: string;
    buttonOrText: string;
    text: string;
};
export declare const Webview: {
    outerFrame: string;
    innerFrame: string;
};
//# sourceMappingURL=1.37.0.d.ts.map