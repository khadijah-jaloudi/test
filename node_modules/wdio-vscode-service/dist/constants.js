import path from 'node:path';
import { Key } from 'webdriverio';
export const VSCODE_CAPABILITY_KEY = 'wdio:vscodeOptions';
export const DEFAULT_CHANNEL = 'stable';
export const VSCODE_APPLICATION_ARGS = {
    // https://github.com/microsoft/vscode/issues/84238
    noSandbox: true,
    // https://github.com/microsoft/vscode-test/issues/120
    disableUpdates: true,
    skipWelcome: true,
    skipReleaseNotes: true,
    disableWorkspaceTrust: true,
    disableExtensions: true
};
export const SETTINGS_KEY = 'wdioVSCodeService.proxy';
export const DEFAULT_VSCODE_SETTINGS = {
    'window.titleBarStyle': 'custom',
    'workbench.editor.enablePreview': false,
    'window.restoreFullscreen': true,
    'window.newWindowDimensions': 'maximized',
    'security.workspace.trust.enabled': false,
    'window.dialogStyle': 'custom',
    'files.simpleDialog.enable': true,
    /**
     * for service specific configuration of the VSCode API proxy
     */
    [SETTINGS_KEY]: {}
};
export const VSCODE_RELEASES = 'https://update.code.visualstudio.com/api/releases/stable';
export const VSCODE_MANIFEST_URL = 'https://raw.githubusercontent.com/microsoft/vscode/%s/cgmanifest.json';
export const VSCODE_WEB_STANDALONE = 'https://update.code.visualstudio.com/api/update/web-standalone/%s/latest';
export const CHROMEDRIVER_RELEASES = 'https://chromedriver.storage.googleapis.com/LATEST_RELEASE_%s';
export const CHROMEDRIVER_DOWNLOAD_PATH = 'https://chromedriver.storage.googleapis.com/%s/chromedriver_%s.zip';
export const DEFAULT_VSCODE_WEB_HOSTNAME = 'localhost';
export const DEFAULT_VSCODE_WEB_PORT = 3000;
export const DEFAULT_CACHE_PATH = path.join(process.cwd(), '.wdio-vscode-service');
export const CMD_KEY = process.platform === 'darwin' ? Key.Command : Key.Control;
export const DEFAULT_PROXY_OPTIONS = {
    enable: true,
    port: undefined,
    commandTimeout: 60 * 1000,
    connectionTimeout: 5 * 60 * 1000
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLElBQUksTUFBTSxXQUFXLENBQUE7QUFDNUIsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGFBQWEsQ0FBQTtBQUdqQyxNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FBRyxvQkFBNkIsQ0FBQTtBQUNsRSxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUcsUUFBUSxDQUFBO0FBQ3ZDLE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFlO0lBQy9DLG1EQUFtRDtJQUNuRCxTQUFTLEVBQUUsSUFBSTtJQUNmLHNEQUFzRDtJQUN0RCxjQUFjLEVBQUUsSUFBSTtJQUNwQixXQUFXLEVBQUUsSUFBSTtJQUNqQixnQkFBZ0IsRUFBRSxJQUFJO0lBQ3RCLHFCQUFxQixFQUFFLElBQUk7SUFDM0IsaUJBQWlCLEVBQUUsSUFBSTtDQUMxQixDQUFBO0FBQ0QsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLHlCQUF5QixDQUFBO0FBQ3JELE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFHO0lBQ25DLHNCQUFzQixFQUFFLFFBQVE7SUFDaEMsZ0NBQWdDLEVBQUUsS0FBSztJQUN2QywwQkFBMEIsRUFBRSxJQUFJO0lBQ2hDLDRCQUE0QixFQUFFLFdBQVc7SUFDekMsa0NBQWtDLEVBQUUsS0FBSztJQUN6QyxvQkFBb0IsRUFBRSxRQUFRO0lBQzlCLDJCQUEyQixFQUFFLElBQUk7SUFDakM7O09BRUc7SUFDSCxDQUFDLFlBQVksQ0FBQyxFQUFFLEVBQUU7Q0FDckIsQ0FBQTtBQUNELE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRywwREFBMEQsQ0FBQTtBQUN6RixNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyx1RUFBdUUsQ0FBQTtBQUMxRyxNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FBRywwRUFBMEUsQ0FBQTtBQUMvRyxNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FBRywrREFBK0QsQ0FBQTtBQUNwRyxNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FBRyxvRUFBb0UsQ0FBQTtBQUU5RyxNQUFNLENBQUMsTUFBTSwyQkFBMkIsR0FBRyxXQUFXLENBQUE7QUFDdEQsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQUcsSUFBSSxDQUFBO0FBQzNDLE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFFLHNCQUFzQixDQUFDLENBQUE7QUFDbEYsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxRQUFRLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFBO0FBQ2hGLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUF1QjtJQUNyRCxNQUFNLEVBQUUsSUFBSTtJQUNaLElBQUksRUFBRSxTQUFTO0lBQ2YsY0FBYyxFQUFFLEVBQUUsR0FBRyxJQUFJO0lBQ3pCLGlCQUFpQixFQUFFLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSTtDQUNuQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBhdGggZnJvbSAnbm9kZTpwYXRoJ1xuaW1wb3J0IHsgS2V5IH0gZnJvbSAnd2ViZHJpdmVyaW8nXG5pbXBvcnQgdHlwZSB7IEFyZ3NQYXJhbXMsIFZTQ29kZVByb3h5T3B0aW9ucyB9IGZyb20gJy4vdHlwZXMnXG5cbmV4cG9ydCBjb25zdCBWU0NPREVfQ0FQQUJJTElUWV9LRVkgPSAnd2Rpbzp2c2NvZGVPcHRpb25zJyBhcyBjb25zdFxuZXhwb3J0IGNvbnN0IERFRkFVTFRfQ0hBTk5FTCA9ICdzdGFibGUnXG5leHBvcnQgY29uc3QgVlNDT0RFX0FQUExJQ0FUSU9OX0FSR1M6IEFyZ3NQYXJhbXMgPSB7XG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC92c2NvZGUvaXNzdWVzLzg0MjM4XG4gICAgbm9TYW5kYm94OiB0cnVlLFxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9taWNyb3NvZnQvdnNjb2RlLXRlc3QvaXNzdWVzLzEyMFxuICAgIGRpc2FibGVVcGRhdGVzOiB0cnVlLFxuICAgIHNraXBXZWxjb21lOiB0cnVlLFxuICAgIHNraXBSZWxlYXNlTm90ZXM6IHRydWUsXG4gICAgZGlzYWJsZVdvcmtzcGFjZVRydXN0OiB0cnVlLFxuICAgIGRpc2FibGVFeHRlbnNpb25zOiB0cnVlXG59XG5leHBvcnQgY29uc3QgU0VUVElOR1NfS0VZID0gJ3dkaW9WU0NvZGVTZXJ2aWNlLnByb3h5J1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfVlNDT0RFX1NFVFRJTkdTID0ge1xuICAgICd3aW5kb3cudGl0bGVCYXJTdHlsZSc6ICdjdXN0b20nLFxuICAgICd3b3JrYmVuY2guZWRpdG9yLmVuYWJsZVByZXZpZXcnOiBmYWxzZSxcbiAgICAnd2luZG93LnJlc3RvcmVGdWxsc2NyZWVuJzogdHJ1ZSxcbiAgICAnd2luZG93Lm5ld1dpbmRvd0RpbWVuc2lvbnMnOiAnbWF4aW1pemVkJyxcbiAgICAnc2VjdXJpdHkud29ya3NwYWNlLnRydXN0LmVuYWJsZWQnOiBmYWxzZSxcbiAgICAnd2luZG93LmRpYWxvZ1N0eWxlJzogJ2N1c3RvbScsXG4gICAgJ2ZpbGVzLnNpbXBsZURpYWxvZy5lbmFibGUnOiB0cnVlLFxuICAgIC8qKlxuICAgICAqIGZvciBzZXJ2aWNlIHNwZWNpZmljIGNvbmZpZ3VyYXRpb24gb2YgdGhlIFZTQ29kZSBBUEkgcHJveHlcbiAgICAgKi9cbiAgICBbU0VUVElOR1NfS0VZXToge31cbn1cbmV4cG9ydCBjb25zdCBWU0NPREVfUkVMRUFTRVMgPSAnaHR0cHM6Ly91cGRhdGUuY29kZS52aXN1YWxzdHVkaW8uY29tL2FwaS9yZWxlYXNlcy9zdGFibGUnXG5leHBvcnQgY29uc3QgVlNDT0RFX01BTklGRVNUX1VSTCA9ICdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vbWljcm9zb2Z0L3ZzY29kZS8lcy9jZ21hbmlmZXN0Lmpzb24nXG5leHBvcnQgY29uc3QgVlNDT0RFX1dFQl9TVEFOREFMT05FID0gJ2h0dHBzOi8vdXBkYXRlLmNvZGUudmlzdWFsc3R1ZGlvLmNvbS9hcGkvdXBkYXRlL3dlYi1zdGFuZGFsb25lLyVzL2xhdGVzdCdcbmV4cG9ydCBjb25zdCBDSFJPTUVEUklWRVJfUkVMRUFTRVMgPSAnaHR0cHM6Ly9jaHJvbWVkcml2ZXIuc3RvcmFnZS5nb29nbGVhcGlzLmNvbS9MQVRFU1RfUkVMRUFTRV8lcydcbmV4cG9ydCBjb25zdCBDSFJPTUVEUklWRVJfRE9XTkxPQURfUEFUSCA9ICdodHRwczovL2Nocm9tZWRyaXZlci5zdG9yYWdlLmdvb2dsZWFwaXMuY29tLyVzL2Nocm9tZWRyaXZlcl8lcy56aXAnXG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX1ZTQ09ERV9XRUJfSE9TVE5BTUUgPSAnbG9jYWxob3N0J1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfVlNDT0RFX1dFQl9QT1JUID0gMzAwMFxuZXhwb3J0IGNvbnN0IERFRkFVTFRfQ0FDSEVfUEFUSCA9IHBhdGguam9pbihwcm9jZXNzLmN3ZCgpLCAnLndkaW8tdnNjb2RlLXNlcnZpY2UnKVxuZXhwb3J0IGNvbnN0IENNRF9LRVkgPSBwcm9jZXNzLnBsYXRmb3JtID09PSAnZGFyd2luJyA/IEtleS5Db21tYW5kIDogS2V5LkNvbnRyb2xcbmV4cG9ydCBjb25zdCBERUZBVUxUX1BST1hZX09QVElPTlM6IFZTQ29kZVByb3h5T3B0aW9ucyA9IHtcbiAgICBlbmFibGU6IHRydWUsXG4gICAgcG9ydDogdW5kZWZpbmVkLFxuICAgIGNvbW1hbmRUaW1lb3V0OiA2MCAqIDEwMDAsXG4gICAgY29ubmVjdGlvblRpbWVvdXQ6IDUgKiA2MCAqIDEwMDBcbn1cbiJdfQ==