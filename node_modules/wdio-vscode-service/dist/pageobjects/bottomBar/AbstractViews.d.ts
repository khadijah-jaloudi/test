import { ElementWithContextMenu } from '../utils.js';
/**
 * View with channel selector/**
 *
 * @category BottomBar
 */
export declare abstract class ChannelView<T> extends ElementWithContextMenu<T> {
    protected actionsLabel: string;
    /**
    * Get names of all selectable channels
    * @returns Promise resolving to array of strings - channel names
    */
    getChannelNames(): Promise<string[]>;
    /**
     * Get name of the current channel
     * @returns Promise resolving to the current channel name
     */
    getCurrentChannel(): Promise<string>;
    /**
     * Select a channel using the selector combo
     * @param name name of the channel to open
     */
    selectChannel(name: string): Promise<void>;
}
/**
 * View with channel selection and text area
 */
export declare abstract class TextView<T> extends ChannelView<T> {
    protected actionsLabel: string;
    /**
     * Get all text from the currently open channel
     * @returns Promise resolving to the view's text
     */
    getText(): Promise<string[]>;
    /**
     * Clear the text in the current channel
     * @returns Promise resolving when the clear text button is pressed
     */
    clearText(): Promise<void>;
}
//# sourceMappingURL=AbstractViews.d.ts.map