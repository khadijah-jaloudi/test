var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { SideBarView } from '../SideBarView.js';
import { PageDecorator } from '../../utils.js';
import { DebugView as DebugViewLocators } from '../../../locators/1.73.0.js';
/**
 * Page object representing the Run/Debug view in the side bar
 *
 * @category Sidebar
 */
export let DebugView = class DebugView extends SideBarView {
    constructor() {
        super(...arguments);
        /**
         * @private
         */
        this.locatorKey = 'DebugView';
    }
    /**
     * Get the title of the selected launch configuration
     * @returns Promise resolving to the title
     */
    async getLaunchConfiguration() {
        const action = await this.getTitlePart().elem.$(this.locators.launchCombo);
        const combo = await action.$(this.locators.launchSelect);
        return combo.getAttribute('title');
    }
    /**
     * Get titles of all available launch configurations
     * @returns Promise resolving to list of titles
     */
    async getLaunchConfigurations() {
        const action = await this.getTitlePart().elem.$(this.locators.launchCombo);
        const combo = await action.$(this.locators.launchSelect);
        const configs = [];
        const options = await combo.$$(this.locators.launchOption);
        for (const option of options) {
            if (await option.isEnabled()) {
                configs.push(await option.getAttribute('value'));
            }
        }
        return configs;
    }
    /**
     * Select a given launch configuration
     * @param title title of the configuration to select
     */
    async selectLaunchConfiguration(title) {
        const action = await this.getTitlePart().elem.$(this.locators.launchCombo);
        const combo = await action.$(this.locators.launchSelect);
        const option = await combo.$(this.locators.optionByName(title));
        await option.click();
    }
    /**
     * Start Debugging using the current launch configuration
     */
    async start() {
        const action = await this.getTitlePart().elem.$(this.locators.launchCombo);
        await action.$(this.locators.startButton).click();
    }
};
DebugView = __decorate([
    PageDecorator(DebugViewLocators)
], DebugView);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGVidWdWaWV3LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3BhZ2VvYmplY3RzL3NpZGViYXIvZGVidWcvRGVidWdWaWV3LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQTtBQUMvQyxPQUFPLEVBQUUsYUFBYSxFQUFrQixNQUFNLGdCQUFnQixDQUFBO0FBQzlELE9BQU8sRUFBRSxTQUFTLElBQUksaUJBQWlCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQTtBQUc1RTs7OztHQUlHO0FBRUksV0FBTSxTQUFTLEdBQWYsTUFBTSxTQUFVLFNBQVEsV0FBcUM7SUFBN0Q7O1FBQ0g7O1dBRUc7UUFDSSxlQUFVLEdBQUcsV0FBb0IsQ0FBQTtJQWlENUMsQ0FBQztJQS9DRzs7O09BR0c7SUFDSCxLQUFLLENBQUMsc0JBQXNCO1FBQ3hCLE1BQU0sTUFBTSxHQUFHLE1BQU0sSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQTtRQUMxRSxNQUFNLEtBQUssR0FBRyxNQUFNLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQTtRQUN4RCxPQUFPLEtBQUssQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUE7SUFDdEMsQ0FBQztJQUVEOzs7T0FHRztJQUNILEtBQUssQ0FBQyx1QkFBdUI7UUFDekIsTUFBTSxNQUFNLEdBQUcsTUFBTSxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFBO1FBQzFFLE1BQU0sS0FBSyxHQUFHLE1BQU0sTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFBO1FBQ3hELE1BQU0sT0FBTyxHQUFhLEVBQUUsQ0FBQTtRQUM1QixNQUFNLE9BQU8sR0FBRyxNQUFNLEtBQUssQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQTtRQUUxRCxLQUFLLE1BQU0sTUFBTSxJQUFJLE9BQU8sRUFBRTtZQUMxQixJQUFJLE1BQU0sTUFBTSxDQUFDLFNBQVMsRUFBRSxFQUFFO2dCQUMxQixPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sTUFBTSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFBO2FBQ25EO1NBQ0o7UUFFRCxPQUFPLE9BQU8sQ0FBQTtJQUNsQixDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsS0FBSyxDQUFDLHlCQUF5QixDQUFFLEtBQWE7UUFDMUMsTUFBTSxNQUFNLEdBQUcsTUFBTSxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFBO1FBQzFFLE1BQU0sS0FBSyxHQUFHLE1BQU0sTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFBO1FBQ3hELE1BQU0sTUFBTSxHQUFHLE1BQU0sS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFBO1FBQy9ELE1BQU0sTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFBO0lBQ3hCLENBQUM7SUFFRDs7T0FFRztJQUNILEtBQUssQ0FBQyxLQUFLO1FBQ1AsTUFBTSxNQUFNLEdBQUcsTUFBTSxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFBO1FBQzFFLE1BQU0sTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFBO0lBQ3JELENBQUM7Q0FDSixDQUFBO0FBckRZLFNBQVM7SUFEckIsYUFBYSxDQUFDLGlCQUFpQixDQUFDO0dBQ3BCLFNBQVMsQ0FxRHJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2lkZUJhclZpZXcgfSBmcm9tICcuLi9TaWRlQmFyVmlldy5qcydcbmltcG9ydCB7IFBhZ2VEZWNvcmF0b3IsIElQYWdlRGVjb3JhdG9yIH0gZnJvbSAnLi4vLi4vdXRpbHMuanMnXG5pbXBvcnQgeyBEZWJ1Z1ZpZXcgYXMgRGVidWdWaWV3TG9jYXRvcnMgfSBmcm9tICcuLi8uLi8uLi9sb2NhdG9ycy8xLjczLjAuanMnXG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVidWdWaWV3IGV4dGVuZHMgSVBhZ2VEZWNvcmF0b3I8dHlwZW9mIERlYnVnVmlld0xvY2F0b3JzPiB7IH1cbi8qKlxuICogUGFnZSBvYmplY3QgcmVwcmVzZW50aW5nIHRoZSBSdW4vRGVidWcgdmlldyBpbiB0aGUgc2lkZSBiYXJcbiAqXG4gKiBAY2F0ZWdvcnkgU2lkZWJhclxuICovXG5AUGFnZURlY29yYXRvcihEZWJ1Z1ZpZXdMb2NhdG9ycylcbmV4cG9ydCBjbGFzcyBEZWJ1Z1ZpZXcgZXh0ZW5kcyBTaWRlQmFyVmlldzx0eXBlb2YgRGVidWdWaWV3TG9jYXRvcnM+IHtcbiAgICAvKipcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIHB1YmxpYyBsb2NhdG9yS2V5ID0gJ0RlYnVnVmlldycgYXMgY29uc3RcblxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgdGl0bGUgb2YgdGhlIHNlbGVjdGVkIGxhdW5jaCBjb25maWd1cmF0aW9uXG4gICAgICogQHJldHVybnMgUHJvbWlzZSByZXNvbHZpbmcgdG8gdGhlIHRpdGxlXG4gICAgICovXG4gICAgYXN5bmMgZ2V0TGF1bmNoQ29uZmlndXJhdGlvbiAoKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICAgICAgY29uc3QgYWN0aW9uID0gYXdhaXQgdGhpcy5nZXRUaXRsZVBhcnQoKS5lbGVtLiQodGhpcy5sb2NhdG9ycy5sYXVuY2hDb21ibylcbiAgICAgICAgY29uc3QgY29tYm8gPSBhd2FpdCBhY3Rpb24uJCh0aGlzLmxvY2F0b3JzLmxhdW5jaFNlbGVjdClcbiAgICAgICAgcmV0dXJuIGNvbWJvLmdldEF0dHJpYnV0ZSgndGl0bGUnKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldCB0aXRsZXMgb2YgYWxsIGF2YWlsYWJsZSBsYXVuY2ggY29uZmlndXJhdGlvbnNcbiAgICAgKiBAcmV0dXJucyBQcm9taXNlIHJlc29sdmluZyB0byBsaXN0IG9mIHRpdGxlc1xuICAgICAqL1xuICAgIGFzeW5jIGdldExhdW5jaENvbmZpZ3VyYXRpb25zICgpOiBQcm9taXNlPHN0cmluZ1tdPiB7XG4gICAgICAgIGNvbnN0IGFjdGlvbiA9IGF3YWl0IHRoaXMuZ2V0VGl0bGVQYXJ0KCkuZWxlbS4kKHRoaXMubG9jYXRvcnMubGF1bmNoQ29tYm8pXG4gICAgICAgIGNvbnN0IGNvbWJvID0gYXdhaXQgYWN0aW9uLiQodGhpcy5sb2NhdG9ycy5sYXVuY2hTZWxlY3QpXG4gICAgICAgIGNvbnN0IGNvbmZpZ3M6IHN0cmluZ1tdID0gW11cbiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IGF3YWl0IGNvbWJvLiQkKHRoaXMubG9jYXRvcnMubGF1bmNoT3B0aW9uKVxuXG4gICAgICAgIGZvciAoY29uc3Qgb3B0aW9uIG9mIG9wdGlvbnMpIHtcbiAgICAgICAgICAgIGlmIChhd2FpdCBvcHRpb24uaXNFbmFibGVkKCkpIHtcbiAgICAgICAgICAgICAgICBjb25maWdzLnB1c2goYXdhaXQgb3B0aW9uLmdldEF0dHJpYnV0ZSgndmFsdWUnKSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBjb25maWdzXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2VsZWN0IGEgZ2l2ZW4gbGF1bmNoIGNvbmZpZ3VyYXRpb25cbiAgICAgKiBAcGFyYW0gdGl0bGUgdGl0bGUgb2YgdGhlIGNvbmZpZ3VyYXRpb24gdG8gc2VsZWN0XG4gICAgICovXG4gICAgYXN5bmMgc2VsZWN0TGF1bmNoQ29uZmlndXJhdGlvbiAodGl0bGU6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICBjb25zdCBhY3Rpb24gPSBhd2FpdCB0aGlzLmdldFRpdGxlUGFydCgpLmVsZW0uJCh0aGlzLmxvY2F0b3JzLmxhdW5jaENvbWJvKVxuICAgICAgICBjb25zdCBjb21ibyA9IGF3YWl0IGFjdGlvbi4kKHRoaXMubG9jYXRvcnMubGF1bmNoU2VsZWN0KVxuICAgICAgICBjb25zdCBvcHRpb24gPSBhd2FpdCBjb21iby4kKHRoaXMubG9jYXRvcnMub3B0aW9uQnlOYW1lKHRpdGxlKSlcbiAgICAgICAgYXdhaXQgb3B0aW9uLmNsaWNrKClcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTdGFydCBEZWJ1Z2dpbmcgdXNpbmcgdGhlIGN1cnJlbnQgbGF1bmNoIGNvbmZpZ3VyYXRpb25cbiAgICAgKi9cbiAgICBhc3luYyBzdGFydCAoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIGNvbnN0IGFjdGlvbiA9IGF3YWl0IHRoaXMuZ2V0VGl0bGVQYXJ0KCkuZWxlbS4kKHRoaXMubG9jYXRvcnMubGF1bmNoQ29tYm8pXG4gICAgICAgIGF3YWl0IGFjdGlvbi4kKHRoaXMubG9jYXRvcnMuc3RhcnRCdXR0b24pLmNsaWNrKClcbiAgICB9XG59XG4iXX0=