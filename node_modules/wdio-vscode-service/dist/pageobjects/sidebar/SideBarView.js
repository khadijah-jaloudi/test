var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { ViewContent, ViewTitlePart } from '../index.js';
import { PageDecorator, BasePage } from '../utils.js';
import { SideBarView as SideBarViewLocators } from '../../locators/1.73.0.js';
/**
 * Page object for the side bar view
 *
 * @category Sidebar
 */
export let SideBarView = class SideBarView extends BasePage {
    constructor() {
        super(...arguments);
        /**
         * @private
         */
        this.locatorKey = 'SideBarView';
    }
    /**
     * Get the top part of the open view (contains title and possibly some buttons)
     * @returns ViewTitlePart object
     */
    getTitlePart() {
        return new ViewTitlePart(this.locatorMap, this);
    }
    /**
     * Get the content part of the open view
     * @returns ViewContent object
     */
    getContent() {
        return new ViewContent(this.locatorMap, this);
    }
};
SideBarView = __decorate([
    PageDecorator(SideBarViewLocators)
], SideBarView);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2lkZUJhclZpZXcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGFnZW9iamVjdHMvc2lkZWJhci9TaWRlQmFyVmlldy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFFLGFBQWEsRUFBRSxNQUFNLGFBQWEsQ0FBQTtBQUN4RCxPQUFPLEVBQ0gsYUFBYSxFQUFrQixRQUFRLEVBQzFDLE1BQU0sYUFBYSxDQUFBO0FBQ3BCLE9BQU8sRUFBRSxXQUFXLElBQUksbUJBQW1CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQTtBQUk3RTs7OztHQUlHO0FBRUksV0FBTSxXQUFXLEdBQWpCLE1BQU0sV0FBZSxTQUFRLFFBQVc7SUFBeEM7O1FBQ0g7O1dBRUc7UUFDSSxlQUFVLEdBQUcsYUFBa0MsQ0FBQTtJQWlCMUQsQ0FBQztJQWZHOzs7T0FHRztJQUNILFlBQVk7UUFDUixPQUFPLElBQUksYUFBYSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLENBQUE7SUFDbkQsQ0FBQztJQUVEOzs7T0FHRztJQUNILFVBQVU7UUFDTixPQUFPLElBQUksV0FBVyxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLENBQUE7SUFDakQsQ0FBQztDQUNKLENBQUE7QUFyQlksV0FBVztJQUR2QixhQUFhLENBQUMsbUJBQW1CLENBQUM7R0FDdEIsV0FBVyxDQXFCdkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWaWV3Q29udGVudCwgVmlld1RpdGxlUGFydCB9IGZyb20gJy4uL2luZGV4LmpzJ1xuaW1wb3J0IHtcbiAgICBQYWdlRGVjb3JhdG9yLCBJUGFnZURlY29yYXRvciwgQmFzZVBhZ2UsIExvY2F0b3JDb21wb25lbnRzXG59IGZyb20gJy4uL3V0aWxzLmpzJ1xuaW1wb3J0IHsgU2lkZUJhclZpZXcgYXMgU2lkZUJhclZpZXdMb2NhdG9ycyB9IGZyb20gJy4uLy4uL2xvY2F0b3JzLzEuNzMuMC5qcydcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuZXhwb3J0IGludGVyZmFjZSBTaWRlQmFyVmlldzxUPiBleHRlbmRzIElQYWdlRGVjb3JhdG9yPHR5cGVvZiBTaWRlQmFyVmlld0xvY2F0b3JzPiB7IH1cbi8qKlxuICogUGFnZSBvYmplY3QgZm9yIHRoZSBzaWRlIGJhciB2aWV3XG4gKlxuICogQGNhdGVnb3J5IFNpZGViYXJcbiAqL1xuQFBhZ2VEZWNvcmF0b3IoU2lkZUJhclZpZXdMb2NhdG9ycylcbmV4cG9ydCBjbGFzcyBTaWRlQmFyVmlldzxUPiBleHRlbmRzIEJhc2VQYWdlPFQ+IHtcbiAgICAvKipcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIHB1YmxpYyBsb2NhdG9yS2V5ID0gJ1NpZGVCYXJWaWV3JyBhcyBMb2NhdG9yQ29tcG9uZW50c1xuXG4gICAgLyoqXG4gICAgICogR2V0IHRoZSB0b3AgcGFydCBvZiB0aGUgb3BlbiB2aWV3IChjb250YWlucyB0aXRsZSBhbmQgcG9zc2libHkgc29tZSBidXR0b25zKVxuICAgICAqIEByZXR1cm5zIFZpZXdUaXRsZVBhcnQgb2JqZWN0XG4gICAgICovXG4gICAgZ2V0VGl0bGVQYXJ0ICgpOiBWaWV3VGl0bGVQYXJ0IHtcbiAgICAgICAgcmV0dXJuIG5ldyBWaWV3VGl0bGVQYXJ0KHRoaXMubG9jYXRvck1hcCwgdGhpcylcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGNvbnRlbnQgcGFydCBvZiB0aGUgb3BlbiB2aWV3XG4gICAgICogQHJldHVybnMgVmlld0NvbnRlbnQgb2JqZWN0XG4gICAgICovXG4gICAgZ2V0Q29udGVudCAoKTogVmlld0NvbnRlbnQge1xuICAgICAgICByZXR1cm4gbmV3IFZpZXdDb250ZW50KHRoaXMubG9jYXRvck1hcCwgdGhpcylcbiAgICB9XG59XG4iXX0=