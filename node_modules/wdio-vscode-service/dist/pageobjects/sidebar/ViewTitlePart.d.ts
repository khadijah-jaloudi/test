import type { ChainablePromiseElement } from 'webdriverio';
import { ElementWithContextMenu, IPageDecorator, BasePage, VSCodeLocatorMap } from '../utils.js';
import { SideBarView } from '../index.js';
import { ViewTitlePart as ViewTitlePartLocators } from '../../locators/1.73.0.js';
export interface ViewTitlePart extends IPageDecorator<typeof ViewTitlePartLocators> {
}
/**
 * Page object representing the top (title) part of a side bar view
 *
 * @category Sidebar
 */
export declare class ViewTitlePart extends ElementWithContextMenu<typeof ViewTitlePartLocators> {
    view: SideBarView<any>;
    /**
     * @private
     */
    locatorKey: "ViewTitlePart";
    constructor(locators: VSCodeLocatorMap, view?: SideBarView<any>);
    /**
     * Returns the displayed title of the view
     * @returns Promise resolving to displayed title
     */
    getTitle(): Promise<string>;
    /**
     * Finds action buttons inside the view title part
     * @returns Promise resolving to array of TitleActionButton objects
     */
    getActions(): Promise<TitleActionButton[]>;
    /**
     * Finds an action button by title
     * @param title title of the button to search for
     * @returns Promise resolving to TitleActionButton object
     */
    getAction(title: string): Promise<TitleActionButton>;
}
export interface ViewTitlePart extends IPageDecorator<typeof ViewTitlePartLocators> {
}
/**
 * Page object representing a button inside the view title part
 *
 * @category Sidebar
 */
export declare class TitleActionButton extends BasePage<typeof ViewTitlePartLocators> {
    private title;
    /**
     * @private
     */
    locatorKey: "ViewTitlePart";
    constructor(locators: VSCodeLocatorMap, elem: ChainablePromiseElement<WebdriverIO.Element>, title: string, viewTitle: ViewTitlePart);
    /**
     * Get title of the button
     */
    getTitle(): string;
}
//# sourceMappingURL=ViewTitlePart.d.ts.map