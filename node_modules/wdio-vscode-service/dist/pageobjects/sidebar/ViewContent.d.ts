import { SideBarView, ViewSection } from '../index.js';
import { IPageDecorator, BasePage, VSCodeLocatorMap } from '../utils.js';
import { ViewContent as ViewContentLocators } from '../../locators/1.73.0.js';
export interface ViewContent extends IPageDecorator<typeof ViewContentLocators> {
}
/**
 * Page object representing the view container of a side bar view
 *
 * @category Sidebar
 */
export declare class ViewContent extends BasePage<typeof ViewContentLocators> {
    view: SideBarView<any>;
    /**
     * @private
     */
    locatorKey: "ViewContent";
    constructor(locators: VSCodeLocatorMap, view?: SideBarView<any>);
    /**
     * Finds whether a progress bar is active at the top of the view
     * @returns Promise resolving to true/false
     */
    hasProgress(): Promise<boolean>;
    /**
     * Retrieves a collapsible view content section by its title
     * @param title Title of the section
     * @returns Promise resolving to ViewSection object
     */
    getSection(title: string): Promise<ViewSection>;
    /**
     * Retrieves all the collapsible view content sections
     * @returns Promise resolving to array of ViewSection objects
     */
    getSections(): Promise<ViewSection[]>;
    private createSection;
}
//# sourceMappingURL=ViewContent.d.ts.map