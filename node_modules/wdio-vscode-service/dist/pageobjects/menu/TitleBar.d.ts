import { IPageDecorator, VSCodeLocatorMap } from '../utils.js';
import { WindowControls, ContextMenu } from '../index.js';
import { Menu } from './Menu.js';
import { MenuItem } from './MenuItem.js';
import { TitleBar as TitleBarLocators } from '../../locators/1.73.0.js';
export interface TitleBar extends IPageDecorator<typeof TitleBarLocators> {
}
/**
 * Page object representing the custom VSCode title bar
 *
 * @category Menu
 */
export declare class TitleBar extends Menu<typeof TitleBarLocators> {
    /**
     * @private
     */
    locatorKey: "TitleBar";
    /**
     * Get title bar item by name
     * @param name name of the item to search by
     * @returns Promise resolving to TitleBarItem object
     */
    getItem(name: string): Promise<TitleBarItem | undefined>;
    /**
     * Get all title bar items
     * @returns Promise resolving to array of TitleBarItem objects
     */
    getItems(): Promise<TitleBarItem[]>;
    /**
     * Get the window title
     * @returns Promise resolving to the window title
     */
    getTitle(): Promise<string>;
    /**
     * Get a reference to the WindowControls
     */
    getWindowControls(): WindowControls;
}
export interface TitleBarItem extends IPageDecorator<typeof TitleBarLocators> {
}
/**
 * Page object representing an item of the custom VSCode title bar
 *
 * @category Menu
 */
export declare class TitleBarItem extends MenuItem<typeof TitleBarLocators> {
    private openMenu;
    label: string;
    parentMenu: Menu<typeof TitleBarLocators>;
    /**
     * @private
     */
    locatorKey: "TitleBar";
    constructor(locators: VSCodeLocatorMap, ctor: Function, openMenu: (self: TitleBarItem) => Promise<void>, label: string, parentMenu: Menu<typeof TitleBarLocators>);
    select(): Promise<ContextMenu>;
}
//# sourceMappingURL=TitleBar.d.ts.map