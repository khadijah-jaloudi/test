import { ViewControl, ActionsControl } from '../index.js';
import { IPageDecorator, ElementWithContextMenu } from '../utils.js';
import { ActivityBar as ActivityBarLocators } from '../../locators/1.73.0.js';
export interface ActivityBar extends IPageDecorator<typeof ActivityBarLocators> {
}
/**
 * Page object representing the left side activity bar in VS Code
 *
 * @category ActivityBar
 */
export declare class ActivityBar extends ElementWithContextMenu<typeof ActivityBarLocators> {
    /**
     * @private
     */
    locatorKey: "ActivityBar";
    /**
     * Find all view containers displayed in the activity bar
     * @returns Promise resolving to array of ViewControl objects
     */
    getViewControls(): Promise<ViewControl[]>;
    /**
     * Find a view container with a given title
     * @param name title of the view
     * @returns Promise resolving to ViewControl object representing the view selector, undefined if not found
     */
    getViewControl(name: string): Promise<ViewControl | undefined>;
    /**
     * Returns selected view control
     * @returns Promise resolving to selected ViewControl object
     */
    getSelectedViewAction(): Promise<ViewControl>;
    /**
     * Find all global action controls displayed on the bottom of the activity bar
     * @returns Promise resolving to array of ActionsControl objects
     */
    getGlobalActions(): Promise<ActionsControl[]>;
    /**
     * Find an action control with a given title
     * @param name title of the global action
     * @returns Promise resolving to ActionsControl object representing the action selector, undefined if not found
     */
    getGlobalAction(name: string): Promise<ActionsControl | undefined>;
}
//# sourceMappingURL=ActivityBar.d.ts.map