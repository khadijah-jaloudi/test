import { ChainablePromiseElement } from 'webdriverio';
import { EditorView, EditorGroup, EditorTab } from '../index.js';
import { ElementWithContextMenu, VSCodeLocatorMap } from '../utils.js';
import { Editor as EditorLocatorsMap, SettingsEditor as SettingsEditorLocators, TextEditor as TextEditorLocators, DiffEditor as DiffEditorLocators, EditorView as EditorViewLocators } from '../../locators/1.73.0.js';
/**
 * @hidden
 */
export type EditorLocators = (typeof EditorLocatorsMap & typeof SettingsEditorLocators & typeof TextEditorLocators & typeof DiffEditorLocators & typeof EditorViewLocators);
/**
 * Abstract representation of an editor tab
 *
 * @category Editor
 */
export declare abstract class Editor<T> extends ElementWithContextMenu<T> {
    view: EditorView | EditorGroup;
    constructor(locators: VSCodeLocatorMap, element?: ChainablePromiseElement<WebdriverIO.Element> | string, view?: EditorView | EditorGroup);
    /**
     * Get title/name of the open editor
     */
    getTitle(): Promise<string>;
    /**
     * Get the corresponding editor tab
     */
    getTab(): Promise<EditorTab>;
}
//# sourceMappingURL=Editor.d.ts.map