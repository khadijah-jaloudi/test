var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Key } from 'webdriverio';
import { Editor, InputBox } from '../index.js';
import { PageDecorator } from '../utils.js';
import { Editor as EditorLocators } from '../../locators/1.73.0.js';
import { CMD_KEY } from '../../constants.js';
/**
 * Page object for custom editors
 *
 * @category Editor
 */
export let CustomEditor = class CustomEditor extends Editor {
    constructor() {
        super(...arguments);
        /**
         * @private
         */
        this.locatorKey = 'Editor';
    }
    /**
     * Check if the editor has unsaved changes
     * @returns Promise resolving to true if there are unsaved changes, false otherwise
     */
    async isDirty() {
        const tab = await this.getTab();
        const klass = await tab.elem.getAttribute('class');
        return klass.includes('dirty');
    }
    /**
     * Save the editor
     */
    async save() {
        await browser.action('key')
            .down(CMD_KEY).down('s')
            .up(CMD_KEY).up('s')
            .perform();
    }
    /**
     * Open the Save as prompt
     *
     * @returns InputBox serving as a simple file dialog
     */
    async saveAs() {
        await browser.action('key')
            .down(CMD_KEY).down(Key.Shift).down('s')
            .up(CMD_KEY).down(Key.Shift).up('s')
            .perform();
        const inputBox = browser.$(this.locatorMap.InputBox.elem);
        await inputBox.waitForExist({ timeout: 5000 });
        return new InputBox(this.locatorMap);
    }
};
CustomEditor = __decorate([
    PageDecorator(EditorLocators)
], CustomEditor);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3VzdG9tRWRpdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3BhZ2VvYmplY3RzL2VkaXRvci9DdXN0b21FZGl0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGFBQWEsQ0FBQTtBQUVqQyxPQUFPLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLGFBQWEsQ0FBQTtBQUM5QyxPQUFPLEVBQUUsYUFBYSxFQUFrQixNQUFNLGFBQWEsQ0FBQTtBQUMzRCxPQUFPLEVBQUUsTUFBTSxJQUFJLGNBQWMsRUFBRSxNQUFNLDBCQUEwQixDQUFBO0FBQ25FLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQTtBQUc1Qzs7OztHQUlHO0FBRUksV0FBTSxZQUFZLEdBQWxCLE1BQU0sWUFBYSxTQUFRLE1BQTZCO0lBQXhEOztRQUNIOztXQUVHO1FBQ0ksZUFBVSxHQUFHLFFBQWlCLENBQUE7SUFxQ3pDLENBQUM7SUFuQ0c7OztPQUdHO0lBQ0gsS0FBSyxDQUFDLE9BQU87UUFDVCxNQUFNLEdBQUcsR0FBRyxNQUFNLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQTtRQUMvQixNQUFNLEtBQUssR0FBRyxNQUFNLEdBQUcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFBO1FBQ2xELE9BQU8sS0FBSyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQTtJQUNsQyxDQUFDO0lBRUQ7O09BRUc7SUFDSCxLQUFLLENBQUMsSUFBSTtRQUNOLE1BQU0sT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7YUFDdEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7YUFDdkIsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUM7YUFDbkIsT0FBTyxFQUFFLENBQUE7SUFDbEIsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxLQUFLLENBQUMsTUFBTTtRQUNSLE1BQU0sT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7YUFDdEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQzthQUN2QyxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDO2FBQ25DLE9BQU8sRUFBRSxDQUFBO1FBRWQsTUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxJQUFjLENBQUMsQ0FBQTtRQUNuRSxNQUFNLFFBQVEsQ0FBQyxZQUFZLENBQUMsRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQTtRQUM5QyxPQUFPLElBQUksUUFBUSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQTtJQUN4QyxDQUFDO0NBQ0osQ0FBQTtBQXpDWSxZQUFZO0lBRHhCLGFBQWEsQ0FBQyxjQUFjLENBQUM7R0FDakIsWUFBWSxDQXlDeEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBLZXkgfSBmcm9tICd3ZWJkcml2ZXJpbydcblxuaW1wb3J0IHsgRWRpdG9yLCBJbnB1dEJveCB9IGZyb20gJy4uL2luZGV4LmpzJ1xuaW1wb3J0IHsgUGFnZURlY29yYXRvciwgSVBhZ2VEZWNvcmF0b3IgfSBmcm9tICcuLi91dGlscy5qcydcbmltcG9ydCB7IEVkaXRvciBhcyBFZGl0b3JMb2NhdG9ycyB9IGZyb20gJy4uLy4uL2xvY2F0b3JzLzEuNzMuMC5qcydcbmltcG9ydCB7IENNRF9LRVkgfSBmcm9tICcuLi8uLi9jb25zdGFudHMuanMnXG5cbmV4cG9ydCBpbnRlcmZhY2UgQ3VzdG9tRWRpdG9yIGV4dGVuZHMgSVBhZ2VEZWNvcmF0b3I8dHlwZW9mIEVkaXRvckxvY2F0b3JzPiB7fVxuLyoqXG4gKiBQYWdlIG9iamVjdCBmb3IgY3VzdG9tIGVkaXRvcnNcbiAqXG4gKiBAY2F0ZWdvcnkgRWRpdG9yXG4gKi9cbkBQYWdlRGVjb3JhdG9yKEVkaXRvckxvY2F0b3JzKVxuZXhwb3J0IGNsYXNzIEN1c3RvbUVkaXRvciBleHRlbmRzIEVkaXRvcjx0eXBlb2YgRWRpdG9yTG9jYXRvcnM+IHtcbiAgICAvKipcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIHB1YmxpYyBsb2NhdG9yS2V5ID0gJ0VkaXRvcicgYXMgY29uc3RcblxuICAgIC8qKlxuICAgICAqIENoZWNrIGlmIHRoZSBlZGl0b3IgaGFzIHVuc2F2ZWQgY2hhbmdlc1xuICAgICAqIEByZXR1cm5zIFByb21pc2UgcmVzb2x2aW5nIHRvIHRydWUgaWYgdGhlcmUgYXJlIHVuc2F2ZWQgY2hhbmdlcywgZmFsc2Ugb3RoZXJ3aXNlXG4gICAgICovXG4gICAgYXN5bmMgaXNEaXJ0eSAoKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgICAgIGNvbnN0IHRhYiA9IGF3YWl0IHRoaXMuZ2V0VGFiKClcbiAgICAgICAgY29uc3Qga2xhc3MgPSBhd2FpdCB0YWIuZWxlbS5nZXRBdHRyaWJ1dGUoJ2NsYXNzJylcbiAgICAgICAgcmV0dXJuIGtsYXNzLmluY2x1ZGVzKCdkaXJ0eScpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2F2ZSB0aGUgZWRpdG9yXG4gICAgICovXG4gICAgYXN5bmMgc2F2ZSAoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIGF3YWl0IGJyb3dzZXIuYWN0aW9uKCdrZXknKVxuICAgICAgICAgICAgLmRvd24oQ01EX0tFWSkuZG93bigncycpXG4gICAgICAgICAgICAudXAoQ01EX0tFWSkudXAoJ3MnKVxuICAgICAgICAgICAgLnBlcmZvcm0oKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE9wZW4gdGhlIFNhdmUgYXMgcHJvbXB0XG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBJbnB1dEJveCBzZXJ2aW5nIGFzIGEgc2ltcGxlIGZpbGUgZGlhbG9nXG4gICAgICovXG4gICAgYXN5bmMgc2F2ZUFzICgpOiBQcm9taXNlPElucHV0Qm94PiB7XG4gICAgICAgIGF3YWl0IGJyb3dzZXIuYWN0aW9uKCdrZXknKVxuICAgICAgICAgICAgLmRvd24oQ01EX0tFWSkuZG93bihLZXkuU2hpZnQpLmRvd24oJ3MnKVxuICAgICAgICAgICAgLnVwKENNRF9LRVkpLmRvd24oS2V5LlNoaWZ0KS51cCgncycpXG4gICAgICAgICAgICAucGVyZm9ybSgpXG5cbiAgICAgICAgY29uc3QgaW5wdXRCb3ggPSBicm93c2VyLiQodGhpcy5sb2NhdG9yTWFwLklucHV0Qm94LmVsZW0gYXMgc3RyaW5nKVxuICAgICAgICBhd2FpdCBpbnB1dEJveC53YWl0Rm9yRXhpc3QoeyB0aW1lb3V0OiA1MDAwIH0pXG4gICAgICAgIHJldHVybiBuZXcgSW5wdXRCb3godGhpcy5sb2NhdG9yTWFwKVxuICAgIH1cbn1cbiJdfQ==