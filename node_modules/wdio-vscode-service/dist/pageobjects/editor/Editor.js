import { EditorView } from '../index.js';
import { ElementWithContextMenu } from '../utils.js';
/**
 * Abstract representation of an editor tab
 *
 * @category Editor
 */
export class Editor extends ElementWithContextMenu {
    constructor(locators, element, view = new EditorView(locators)) {
        super(locators, element);
        this.view = view;
        this.setParentElement(this.view.elem);
    }
    /**
     * Get title/name of the open editor
     */
    async getTitle() {
        const tab = await this.getTab();
        return tab.getTitle();
    }
    /**
     * Get the corresponding editor tab
     */
    async getTab() {
        const element = this.view;
        return element.getActiveTab();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRWRpdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3BhZ2VvYmplY3RzL2VkaXRvci9FZGl0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFFLFVBQVUsRUFBMEIsTUFBTSxhQUFhLENBQUE7QUFDaEUsT0FBTyxFQUFFLHNCQUFzQixFQUFvQixNQUFNLGFBQWEsQ0FBQTtBQW9CdEU7Ozs7R0FJRztBQUNILE1BQU0sT0FBZ0IsTUFBVSxTQUFRLHNCQUF5QjtJQUM3RCxZQUNJLFFBQTBCLEVBQzFCLE9BQStELEVBQ3hELE9BQWlDLElBQUksVUFBVSxDQUFDLFFBQVEsQ0FBQztRQUVoRSxLQUFLLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFBO1FBRmpCLFNBQUksR0FBSixJQUFJLENBQXFEO1FBR2hFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFBO0lBQ3pDLENBQUM7SUFFRDs7T0FFRztJQUNILEtBQUssQ0FBQyxRQUFRO1FBQ1YsTUFBTSxHQUFHLEdBQUcsTUFBTSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUE7UUFDL0IsT0FBTyxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUE7SUFDekIsQ0FBQztJQUVEOztPQUVHO0lBQ0gsS0FBSyxDQUFDLE1BQU07UUFDUixNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFBO1FBQ3pCLE9BQU8sT0FBTyxDQUFDLFlBQVksRUFBd0IsQ0FBQTtJQUN2RCxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFpbmFibGVQcm9taXNlRWxlbWVudCB9IGZyb20gJ3dlYmRyaXZlcmlvJ1xuXG5pbXBvcnQgeyBFZGl0b3JWaWV3LCBFZGl0b3JHcm91cCwgRWRpdG9yVGFiIH0gZnJvbSAnLi4vaW5kZXguanMnXG5pbXBvcnQgeyBFbGVtZW50V2l0aENvbnRleHRNZW51LCBWU0NvZGVMb2NhdG9yTWFwIH0gZnJvbSAnLi4vdXRpbHMuanMnXG5pbXBvcnQge1xuICAgIEVkaXRvciBhcyBFZGl0b3JMb2NhdG9yc01hcCxcbiAgICBTZXR0aW5nc0VkaXRvciBhcyBTZXR0aW5nc0VkaXRvckxvY2F0b3JzLFxuICAgIFRleHRFZGl0b3IgYXMgVGV4dEVkaXRvckxvY2F0b3JzLFxuICAgIERpZmZFZGl0b3IgYXMgRGlmZkVkaXRvckxvY2F0b3JzLFxuICAgIEVkaXRvclZpZXcgYXMgRWRpdG9yVmlld0xvY2F0b3JzXG59IGZyb20gJy4uLy4uL2xvY2F0b3JzLzEuNzMuMC5qcydcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCB0eXBlIEVkaXRvckxvY2F0b3JzID0gKFxuICAgIHR5cGVvZiBFZGl0b3JMb2NhdG9yc01hcCAmXG4gICAgdHlwZW9mIFNldHRpbmdzRWRpdG9yTG9jYXRvcnMgJlxuICAgIHR5cGVvZiBUZXh0RWRpdG9yTG9jYXRvcnMgJlxuICAgIHR5cGVvZiBEaWZmRWRpdG9yTG9jYXRvcnMgJlxuICAgIHR5cGVvZiBFZGl0b3JWaWV3TG9jYXRvcnNcbilcblxuLyoqXG4gKiBBYnN0cmFjdCByZXByZXNlbnRhdGlvbiBvZiBhbiBlZGl0b3IgdGFiXG4gKlxuICogQGNhdGVnb3J5IEVkaXRvclxuICovXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgRWRpdG9yPFQ+IGV4dGVuZHMgRWxlbWVudFdpdGhDb250ZXh0TWVudTxUPiB7XG4gICAgY29uc3RydWN0b3IgKFxuICAgICAgICBsb2NhdG9yczogVlNDb2RlTG9jYXRvck1hcCxcbiAgICAgICAgZWxlbWVudD86IENoYWluYWJsZVByb21pc2VFbGVtZW50PFdlYmRyaXZlcklPLkVsZW1lbnQ+IHwgc3RyaW5nLFxuICAgICAgICBwdWJsaWMgdmlldzogRWRpdG9yVmlldyB8IEVkaXRvckdyb3VwID0gbmV3IEVkaXRvclZpZXcobG9jYXRvcnMpXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKGxvY2F0b3JzLCBlbGVtZW50KVxuICAgICAgICB0aGlzLnNldFBhcmVudEVsZW1lbnQodGhpcy52aWV3LmVsZW0pXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2V0IHRpdGxlL25hbWUgb2YgdGhlIG9wZW4gZWRpdG9yXG4gICAgICovXG4gICAgYXN5bmMgZ2V0VGl0bGUgKCk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgICAgIGNvbnN0IHRhYiA9IGF3YWl0IHRoaXMuZ2V0VGFiKClcbiAgICAgICAgcmV0dXJuIHRhYi5nZXRUaXRsZSgpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBjb3JyZXNwb25kaW5nIGVkaXRvciB0YWJcbiAgICAgKi9cbiAgICBhc3luYyBnZXRUYWIgKCk6IFByb21pc2U8RWRpdG9yVGFiPiB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSB0aGlzLnZpZXdcbiAgICAgICAgcmV0dXJuIGVsZW1lbnQuZ2V0QWN0aXZlVGFiKCkgYXMgUHJvbWlzZTxFZGl0b3JUYWI+XG4gICAgfVxufVxuIl19