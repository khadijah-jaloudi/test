import { IPageDecorator, BasePage } from '../utils.js';
import { Dialog as DialogLocators } from '../../locators/1.73.0.js';
export interface ModalDialog extends IPageDecorator<typeof DialogLocators> {
}
/**
 * Page Object for Custom Style Modal Dialogs (non-native)
 *
 * @category Dialog
 */
export declare class ModalDialog extends BasePage<typeof DialogLocators> {
    /**
     * @private
     */
    locatorKey: "Dialog";
    /**
     * Get the dialog's message in a Promise
     */
    getMessage(): Promise<string>;
    /**
     * Get the details message in a Promise
     */
    getDetails(): Promise<string>;
    /**
     * Get the list of buttons as WebElements
     *
     * @returns Promise resolving to Array of WebElement items representing the buttons
     */
    getButtons(): Promise<import("webdriverio").ElementArray>;
    /**
     * Push a button with given title if it exists
     *
     * @param title title/text of the button
     */
    pushButton(title: string): Promise<void>;
    /**
     * Close the dialog using the 'cross' button
     */
    close(): Promise<void>;
}
//# sourceMappingURL=ModalDialog.d.ts.map